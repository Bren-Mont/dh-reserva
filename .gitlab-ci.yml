variables:
  RULES_CHANGES_PATH: "*/"
  FRONTEND_PATH: "frontend"
  BACKEND_PATH: "backend/deparments"


stages:
- build
- test 
- deploy


.base-rules:
    rules:
        - if: '$CI_PIPELINE_SOURCE == "merge"'
          changes:
            - $RULES_CHANGES_PATH
        - when: always
          allow_failure: true

.backend:
    extends: .base-rules
    variables:
        RULES_CHANGES_PATH: "backend/*/"

.frontend: 
    extends: .base-rules
    variables:
        RULES_CHANGES_PATH: "frontend/*/"

backend-build:
    image: maven:3-openjdk-18
    stage: build
    extends: .backend
    needs: []
    script:
        - echo "Building backend"
        - cd backend/deparments
        - mvn clean package -DskipTests -U
    artifacts: 
        paths:
        - backend/deparments/target/*.jar

frontend-build:
    image: node:16.14.2-alpine
    stage: build
    extends: .frontend
    needs: []
    script: 
        - echo "Building frontend"
        - cd $FRONTEND_PATH
        - npm install
        - CI=false npm run build
    artifacts:
        paths:
        - $FRONTEND_PATH

backend-test:
    stage: test
    extends: .backend
    needs: ["backend-build"]
    script: 
        - echo "Testing backend"
    artifacts:
        paths:
        - $BACKEND_PATH/target/*.jar

frontend-test:
    stage: test
    extends: .frontend
    needs: ["frontend-build"]
    script:
        - echo "Testing frontend"
    artifacts:
        paths:
        - frontend/build

backend-deploy: 
  stage: deploy 
  extends: .backend  
  needs: ["backend-test"]
  before_script:
    - 'command -v ssh-agent >/dev/null || (apk add --update openssh )'
    - eval $(ssh-agent -s)
    - echo "$UBUNTU_SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add -
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
    - ssh-keyscan $UBUNTU_EC2_IP >> ~/.ssh/known_hosts
    - chmod 644 ~/.ssh/known_hosts
  script:
    - scp -o StrictHostKeyChecking=no backend/deparments/target/deparments-0.0.1-SNAPSHOT.jar ubuntu@ec2-18-116-203-145.us-east-2.compute.amazonaws.com:/home/ubuntu/ 
    - ssh -o StrictHostKeyChecking=no ubuntu@ec2-18-116-203-145.us-east-2.compute.amazonaws.com "/home/ubuntu/shutdown.sh;/home/ubuntu/start-app.sh" 
frontend-deploy:
    image: python:latest
    stage: deploy
    extends: .frontend
    needs: ["frontend-test"]
    script:
        - echo "Deploying frontend"
        - pip install awscli
        - aws configure set aws_access_key_id $AWS_ACCESS_KEY_ID
        - aws configure set aws_secret_access_key $AWS_SECRET_ACCESS_KEY
        - aws s3 sync $FRONTEND_PATH/build s3://$AWS_S3_BUCKET --delete